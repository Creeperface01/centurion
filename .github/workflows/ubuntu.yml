name: CI (Ubuntu with GCC)

on: [ push, pull_request ]

env:
  SDL_LATEST: 2.0.14
  IMG_VERSION: 2.0.5
  MIX_VERSION: 2.0.4
  TTF_VERSION: 2.0.15

jobs:
  ubuntu-20-04-test:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        SDL_VERSION: [ 2.0.14 ] # TODO add 2.0.10, 2.0.12
    steps:
      - uses: actions/checkout@v2
      - uses: seanmiddleditch/gha-setup-ninja@v3
      - uses: lukka/get-cmake@v3.18.3

      - name: Emulate video device
        shell: bash
        run: |
          sudo apt install xvfb
          /sbin/start-stop-daemon --start --pidfile /tmp/custom_xvfb_99.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :99 -screen 0 800x600x24 -ac +extension GLX;
          export SDL_VIDEODRIVER=x11;
          export DISPLAY=:99.0;
          sleep 3 # give xvfb some time to start

      - name: Install SDL2
        shell: bash
        run: |
          curl -L https://www.libsdl.org/release/SDL2-${{matrix.SDL_VERSION}}.tar.gz | tar xz
          cd SDL2-${{matrix.SDL_VERSION}}
          ./configure
          make
          sudo make install

      - name: Install SDL2_image
        shell: bash
        run: |
          curl -L https://www.libsdl.org/projects/SDL_image/release/SDL2_image-${{env.IMG_VERSION}}.tar.gz | tar xz
          cd SDL2_image-${{env.IMG_VERSION}}
          ./configure
          make
          sudo make install

      - name: Install SDL2_mixer
        shell: bash
        run: |
          curl -L https://www.libsdl.org/projects/SDL_mixer/release/SDL2_mixer-${{env.MIX_VERSION}}.tar.gz | tar xz
          cd SDL2_mixer-${{env.MIX_VERSION}}
          ./configure
          make
          sudo make install

      - name: Install SDL2_ttf
        shell: bash
        run: |
          curl -L https://www.libsdl.org/projects/SDL_ttf/release/SDL2_ttf-${{env.TTF_VERSION}}.tar.gz | tar xz
          cd SDL2_ttf-${{env.TTF_VERSION}}
          ./configure
          make
          sudo make install

      - name: Create build directory
        if: ${{matrix.SDL_VERSION}} == ${{env.SDL_LATEST}}
        shell: bash
        run: mkdir -p build

      - name: Generate build files
        working-directory: ./build
        shell: bash
        run: |
          cmake .. -DCMAKE_BUILD_TYPE=Debug -DCEN_AUDIO=OFF -DCEN_COVERAGE=OFF -GNinja

      - name: Build
        if: ${{matrix.SDL_VERSION}} == ${{env.SDL_LATEST}}
        working-directory: ./build
        shell: bash
        run: |
          ninja CenturionTests
          ninja CenturionMocks
        env:
          SDL_VIDEODRIVER: x11
          DISPLAY: :99.0

      - name: Run unit tests
        if: ${{matrix.SDL_VERSION}} == ${{env.SDL_LATEST}}
        working-directory: ./build/test/unittests
        shell: bash
        run: ./CenturionTests

      - name: Run mocked test suite
        if: ${{matrix.SDL_VERSION}} == ${{env.SDL_LATEST}}
        working-directory: ./build/test/mocks
        shell: bash
        run: ./CenturionMocks